@import "../vars";
@import "texts";

// buttons
@mixin solid-button {
  padding: 15px 30px;
  border-radius: 5px;
  color: $white;
  text-transform: uppercase;
  @include text-14-16;
  font-weight: 500;
  cursor: pointer;
  transition: background-color 0.4s ease;

  &:disabled {
    pointer-events: none;
    user-select: none;
  }
}

@mixin orange-button {
  @include solid-button;
  background-color: $orange;
  @media screen and (min-width: 1280px) {
    &:hover {
      background-color: $brown;
    }
  }

  &:active {
    background-color: $brown_light;
  }
  &:focus {
    background-color: $brown;
  }
}

@mixin brown-button {
  @include solid-button;
  background-color: $brown;
  @media screen and (min-width: 1280px) {
    &:hover {
      background-color: $orange;
    }
  }

  &:active {
    background-color: $brown_light;
  }
  &:focus {
    background-color: $orange;
  }
}

@mixin slider-btn {
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
  cursor: pointer;
  svg {
    width: 100%;
    height: 100%;
    fill: $orange;
  }
  &_prev {
    transform: rotate(180deg);
  }
  @media screen and (min-width: 1280px) {
    &:before {
      content: '';
      width: 42px;
      height: 42px;
      position: absolute;
      top: 50%;
      left: 100%;
      transform: translate(-70%, -50%);
      border: 1px solid $brown;
      border-radius: 50%;
      opacity: 0;
      transition: opacity 1s ease;
    }
    &:hover {
      &:before {
        opacity: 1;
      }
    }
  }
}

// links
@mixin menu-link {
  @include text-14;
  font-weight: 500;
  text-transform: uppercase;
  color: $brown;
  position: relative;
  transition: color .4s ease;

  &:after {
    content: '';
    width: 0;
    height: 1px;
    background-color: $orange;
    position: absolute;
    bottom: -5px;
    left: 0;
    transition: width .4s ease;
  }

  @media screen and (min-width: 1280px) {
    &:hover {
      color: $orange;

      &:after {
        width: 100%;
      }
    }
  }

  &:active {
    color: $brown_light;
  }
  &:focus {
    color: $orange;

    &:after {
      width: 100%;
    }
  }
}

// inputs
@mixin base-input {
  position: relative;
  color: $brown-light;
  input {
    padding: 20px;
    @include text-14;
    border: 1px solid $grey;
    border-radius: 15px;
    transition: border-color .4s ease;

    & ~ label {
      @include text-14;
      position: absolute;
      top: 50%;
      transform: translateY(-50%);
      left: 20px;
      padding: 0 6px;
      background-color: $white;
      transition-property: color, font-size, top;
      transition-duration: .4s;
      transition-timing-function: ease;
    }

    &:active, &.base-input_fill {
      & ~ label {
        top: 0;
        font-size: 12px;
      }
    }

    &:focus {
      border-color: $brown;
    }

    &.base-input_success {
      border-color: $orange;

      & ~ label {
        color: $orange;
      }
    }

    &.base-input_error {
      border-color: $red;

      & ~ label {
        color: $red;
      }

      & ~ .base-input__error {
        opacity: 1;
      }
    }

    & ~ .base-input__error {
      @include text-14;
      font-size: 12px;
      position: absolute;
      bottom: -10px;
      left: 0;
      opacity: 0;
      transition: opacity .4s ease;
    }

    @media screen and (min-width: 1280px) {
      &:hover {
        border-color: $brown;
      }
    }
  }
}

// burger
@mixin burger {
  cursor: pointer;
  &__wrapper {
    position: relative;
    width: 100%;
    height: 100%;
  }
  span {
    display: block;
    background-color: $brown;
    border-radius: 50px;
    transform-origin: left center;
    position: absolute;
    height: 4px;
    width: 100%;
    opacity: 1;
    left: 0;
    -webkit-transform: rotate(0deg);
    -moz-transform: rotate(0deg);
    -o-transform: rotate(0deg);
    transform: rotate(0deg);
    -webkit-transition: .5s ease-in-out;
    -moz-transition: .5s ease-in-out;
    -o-transition: .5s ease-in-out;
    transition: .5s ease-in-out;

    &:nth-child(1) {
      top: 0;
    }

    &:nth-child(2) {
      top: 50%;
      transform: translateY(-50%);
    }

    &:nth-child(3) {
      width: 50%;
      bottom: 0;
    }
  }

  &.opened {
    span {
      &:nth-child(1) {
        -webkit-transform: rotate(45deg);
        -moz-transform: rotate(45deg);
        -o-transform: rotate(45deg);
        transform: rotate(45deg);
        top: 0;
        left: 4px;
      }

      &:nth-child(2) {
        width: 0;
        opacity: 0;
      }

      &:nth-child(3) {
        width: 100%;
        -webkit-transform: rotate(-45deg);
        -moz-transform: rotate(-45deg);
        -o-transform: rotate(-45deg);
        transform: rotate(-45deg);
        bottom: -1px;
        left: 4px;
      }
    }
  }
  &:focus {
    span {
      background-color: $orange;
    }
  }
  &:active {
    span {
      background-color: $brown_light;
    }
  }
  @media screen and (min-width: 1280px) {
    &:hover {
      span {
        background-color: $orange;
      }
    }
  }
}
